<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>
<%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
<%= javascript_include_tag "application", "data-turbolinks-track" => true %>

<nav class="nav">
  <div class="nav-wrapper">
    <h1>Distance Between Two Airports</h1>
  </div>
</nav>
<main class="main">
  <div class="main-wrapper group">
    <ul class="group">
      <li class="ui-widget destination">
        <label for="tags">From: </label>
        <input class="airport_a">
      </li>

      <li class="ui-widget destination">
        <label for="tags">To: </label>
        <input class="airport_b">
      </li>
      <li>
        <button>find distance!</button>
      </li>
    </ul>
    <div class="results-together">
      <p class="result-text">
        The distance in nautical miles (NM) is:
      </p>
      <div class="result">
      </div>
    </div>
    <div class="map-container">
      <div id="map">

      </div>
    </div>
  </div>
</main>

<script>

  $(function() {

    var autoComplete = function() {
      var availableTags = <%= raw @airports.as_json %>

      $( ".airport_a" ).autocomplete({
        source: availableTags,
        minLength: 3
      });

      $( ".airport_b" ).autocomplete({
        source: availableTags,
        minLength: 3
      });
    };

    var buildMap = function(mapPoints) {
      handler = Gmaps.build('Google');
      handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
        var markers = handler.addMarkers(mapPoints);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
        handler.getMap().setZoom(4);
        if (mapPoints.length > 1) {
          var polylines = handler.addPolylines(
              [
                [
                  {lat: mapPoints[0].lat, lng: mapPoints[0].lng},
                  {lat: mapPoints[1].lat, lng: mapPoints[1].lng}
                ]
              ],
              { strokeColor: '#FF0000'}
            );
        }
      });
    };

    var calculateDistance = function(airport_a, airport_b) {
        $.ajax({
          url: "/airports/distance",
          type: "GET",
          data: {airport_a: airport_a, airport_b: airport_b},
          dataType: "json",
          success: function(model, resp, options) {
            $(".result").text(model)
          },
          error: function() {
            $(".result").text("please enter a valid airport!")
          }
        })
    };

    var markMap = function(airport_a, airport_b) {
        $.ajax({
          url: "/airports/map",
          type: "GET",
          data: {airport_a: airport_a, airport_b: airport_b},
          dataType: "json",
          success: function(model, resp, options) {
            mapPoints = [
              {"lat": model[0].lat, "lng": model[0].lng},
              {"lat": model[1].lat, "lng": model[1].lng}
            ]
            buildMap(mapPoints);
          }
        })
    }

    var handleClick = function() {
      $("button").on("click", function() {
        var airport_a = $(".airport_a").val();
        var airport_b = $(".airport_b").val();
        calculateDistance(airport_a, airport_b);
        markMap(airport_a, airport_b);
      })
    }

    var initialize = function() {
      mapPoints = [
        {
          "lat": 38.5000,
          "lng": -98,
          "picture": {
            "url": "https://addons.cdn.mozilla.net/img/uploads/addon_icons/13/13028-64.png",
            "width":  36,
            "height": 36
          }
        }
      ]
      autoComplete();
      buildMap(mapPoints);
      handleClick();
    }

    initialize();



  })


</script>
